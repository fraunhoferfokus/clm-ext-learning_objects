---
openapi: 3.0.0
info:
  title: CLM-EXT-Learning-objects API
  version: 1.0.0
  description: API endpoints the clm-ext-learning_objects module offers
servers:
- url: "{scheme}://{hostname}:{port}{path}"
  description: The production API server
  variables:
    hostname:
      default: localhost
    port:
      default: '5002'
    path:
      default: ''
    scheme:
      default: http
security:
- bearerAuth: []
paths:
  "/learningObjects/{loId}/metadata":
    get:
      summary: Returns Course-Structure of a logged in user
      description: Get's the course structure of a tool-provider in XML-Common-Cartridge.
        Currently Swagger has problems displaying XML-Examples. Get the real example
        from the endpoint please.
      tags:
      - pblc
      parameters:
      - in: path
        name: loId
        description: Id of the learning object
        example: loId
        required: true
        schema: 
          type: string
      responses:
        '200':
          description: Successful operation, The course-structure of that TP is shown
            in XML. 'Example Value' has problems rendering xml data, please get data
            from the route for a real example
          content:
            application/json:
              schema:
                properties:
                  V2/courseStructure:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CourseStructure"
  "/learningObjects/users/{userId}/courses":
    get:
      summary: Returns Course-Structure of a logged in user
      description: Get's the course structure of a tool-provider in XML-Common-Cartridge.
        Currently Swagger has problems displaying XML-Examples. Get the real example
        from the endpoint please.
      tags:
      - pblc
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - in: path
        name: userId
        description: Id of the user
        example: userId
        required: true
        schema:
          type: string
      - in: query
        name: includeMetadata
        description: If true, the metadata of the tool will be included in the XML
          (defaults to false)
        example: false
        schema:
          type: boolean
      responses:
        '200':
          description: Successful operation, The course-structure of that TP is shown
            in XML. 'Example Value' has problems rendering xml data, please get data
            from the route for a real example
          content:
            application/json:
              schema:
                properties:
                  V2/courseStructure:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CourseStructure"
  "/learningObjects/mgmt":
    get:
      tags:
      - mgmt-los
      summary: 'Retrieves all learning objects [Minimum Role: "Learner"]'
      description: Retrieve all learning objects the user has access to through the
        group enrollments.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      responses:
        '200':
          description: Successfully created learning object
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LearningObject"
        '400':
          description: Bad request - Invalid input or validation error
        '401':
          description: Unauthorized
    post:
      tags:
      - mgmt-los
      summary: 'Create a Learning object [Minimum Role: "Instructor"]'
      description: Create a Learning object
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LearningObject"
      responses:
        '200':
          description: Successfully created learning object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LearningObject"
        '400':
          description: Bad request - Invalid input or validation error
        '401':
          description: Unauthorized
  "/learningObjects/mgmt/{id}":
    put:
      tags:
      - mgmt-los
      summary: 'Update an existing Learning Object [Minimum Role: "Instructor"]'
      description: Modify an existing Learning object's attributes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LearningObject"
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - in: path
        name: id
        description: The id of the learning object
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully updated learning object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LearningObject"
        '400':
          description: Bad request - Invalid input or validation error
        '401':
          description: Unauthorized
    patch:
      tags:
      - mgmt-los
      summary: 'Update an existing Learning Object [Minimum Role: "Instructor"]'
      description: Modify an existing Learning object's attribute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LearningObject"
      parameters:
      - in: path
        name: id
        description: The id of the learning object
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully partially updated learning object
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LearningObject"
        '400':
          description: Bad request - Invalid input or validation error
        '401':
          description: Unauthorized
    delete:
      tags:
      - mgmt-los
      summary: 'Deletes an existing Learning Object [Minimum Role: "Instructor"]'
      description: Delete an existing learning object
      parameters:
      - in: path
        name: id
        description: The id of the learning object
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully deleted learning object
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  "/learningObjects/mgmt/relations":
    get:
      tags:
      - mgmt-los
      summary: 'Get the relations from the learning objects the user has access to
        [Minimum Role : ''Learner'']'
      description: Retrieve relations between various learning objects that the authenticated
        user has permissions to view.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      responses:
        '200':
          description: A list of relations between learning objects.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/relation"
  "/learningObjects/mgmt/{id}/learningObjects/{childLoId}":
    post:
      tags:
      - mgmt-los
      summary: 'Add learning object to learning object [Minimum Role: ''Instructor'']'
      description: Associates a specific child learning object with another parent
        learning object, given their respective identifiers.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: childLoId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully associated the child learning object with the
            parent.
  "/learningObjects/mgmt/{id}/tools/{toolId}":
    post:
      tags:
      - mgmt-los
      summary: 'Add tool to learning object [Minimum Role: ''Instructor'']'
      description: Link a specific tool to a learning object by their respective identifiers.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: toolId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully added the tool to the learning object.
  "/learningObjects/mgmt/{id}/relations/{relationId}":
    put:
      tags:
      - mgmt-los
      summary: 'Change the order of a learning object within a learning object, or
        change the associated tool to a specific learning object [Minimum Role: ''Instructor'']'
      description: Modify the order of a specific learning object inside another or
        alter the tool linked to a given learning object.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: relationId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully updated the learning object's order or associated
            tool.
  "/learningObjects/mgmt/groups/{id}/enrollments/{loId}":
    post:
      tags:
      - mgmt-groups
      - mgmt-los
      summary: 'Enroll a group to a learning object [Minimum role: ''Instructor'']'
      description: Enrolls a specific group to a particular learning object using
        the respective identifiers.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: loId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully enrolled the group to the learning object.
  "/learningObjects/mgmt/groups/{id}/enrollments/{relationId}":
    delete:
      tags:
      - mgmt-groups
      - mgmt-los
      summary: 'Delete Enrollment [Minimum role: ''Instructor'']'
      description: Removes a group's enrollment to a specific learning object, identified
        by its relationId.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: relationId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted the group's enrollment to the learning
            object.
    patch:
      tags:
      - mgmt-groups
      - mgmt-los
      summary: 'Change the enrollment order within the group [Minimum role: ''Instructor'']'
      description: Adjusts the sequence of a specific enrollment within a group based
        on the given relationId.
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: relationId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully modified the order of the enrollment within the
            group.
  "/learningObjects/users/me/courses":
    get:
      summary: Returns Course-Structure of a logged in user
      description: Get's the course structure of a tool-provider in XML-Common-Cartridge.
        Currently Swagger has problems displaying XML-Examples. Get the real example
        from the endpoint please.
      tags:
      - pblc
      parameters:
      - "$ref": "#/components/parameters/accessToken"
      - in: query
        name: includeMetadata
        description: If true, the metadata of the tool will be included in the XML
          (defaults to false)
        example: false
        schema:
          type: boolean
      responses:
        '200':
          description: Successful operation, The course-structure of that TP is shown
            in XML. 'Example Value' has problems rendering xml data, please get data
            from the route for a real example
          content:
            application/json:
              schema:
                properties:
                  V2/courseStructure:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CourseStructure"
components:
  schemas:
    relation:
      type: object
      properties:
        fromType:
          type: string
          description: The type of the node
          default: fromTypeNode
        toType:
          type: string
          description: The type of the target node
          default: toTypeNode
        fromId:
          type: string
          description: The id of the node
          default: fromNodeId
        toId:
          type: string
          description: The id of the target node
          default: toNodeId
        order:
          type: number
          description: The order of the relation. Used for example ordering the enrollments
            of a group/user
          default: 0
    LearningObject:
      type: object
      required:
      - displayName
      properties:
        _id:
          type: string
          description: The id of the learning object
        displayName:
          type: string
          description: Display name for the learning object
          minLength: 5
        iconUrl:
          type: string
          description: Icon URL for the learning object
    CourseStructure:
      type: object
      description: The course-structure of a tool provider
      properties:
        organisations:
          type: object
          description: root element. Contains courses
          properties:
            item:
              type: object
              description: Each item describes a learning unit. It either has a tool
                or another item
              properties:
                title:
                  type: string
                  description: Title of the learning unit. Every 'item' must have
                    a title
                  example: "<title>Einführung</title>"
                tool:
                  type: string
                  description: contains id as xml-attribute which points to a tool
                    in resources
                  example: "<tool identifier='fb763566-4c90-412f-a3e6-bd5ae776d960'/>"
        resources:
          type: object
          description: Here are all the tool informations.
          properties:
            resource:
              type: object
              description: represents information of a single tool. Identifier from
                tool points here and is a xml-attribute
              properties:
                toolId:
                  type: string
                  description: the tool Id of the provider
                  example: '12345'
                providerId:
                  type: string
                  description: the provider which offer the tool-content!
                  example: toolprovider-edx
                target:
                  type: string
                  description: describes how to open the tool
                  example: iframe
  parameters:
    accessToken:
      name: x-access-token
      in: header
      description: The access token
      required: true
      example: exampleAccessToken
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    refreshAuth:
      type: apiKey
      in: header
      name: x-refresh-token
tags: []
